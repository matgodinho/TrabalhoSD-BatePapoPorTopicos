/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package User_Application;

import Models.TopicModel;
import Models.UserModel;
import Models.ModelUrl;
import WebSeviceSOAP.Interface_SOAP;
import WebSeviceSOAP.Telas.Screen_Register_User;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.InetAddress;
import java.net.MalformedURLException;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.net.URL;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.table.DefaultTableModel;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import jdbc.ConnectionFactory;

/**
 *
 * @author Diego
 */
public class Screen_SelectChat extends javax.swing.JFrame {
    private int coduser;
    private Socket socket = null;
    private ObjectOutputStream outputStream = null;
    /**
     * Creates new form Screen_SelectChat
     */
    public Screen_SelectChat(int cod) {
        initComponents();//inicia componetes(gerado pelo netbens)
          
        coduser = cod;
        Connection conexao = new ConnectionFactory().getConnection();//usado para estabelecer conexao com banco
        
        ArrayList<TopicModel> ListaTopicos = new ArrayList<>();//vetor para guardar topicos
                // string que sera enviada ao banco para realizar uma açao
		String sql = "select * from topicos";
		PreparedStatement st;
		try {
			st = conexao.prepareStatement(sql);
			ResultSet result = st.executeQuery();//executa sql no banco e guarda em result
			while (result.next()){
				TopicModel topic= new TopicModel();
				topic.setCodtopico(result.getInt("codtopico"));//pega cod do topico da coluna codtopico
                                //System.out.println(result.getInt("codusuario"));
				topic.setTopico(result.getString("topico"));//pega descricao do topico da coluna topico
                                //System.out.println(result.getString("nome"));
				ListaTopicos.add(topic);//add topico na lista
			}
			result.close();
			st.close();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
        DefaultListModel lista = new DefaultListModel();//modelo para lista
        jList1.setModel(lista);//atribui como modelo para jlist1 "lista"
                       
        for (TopicModel ref : ListaTopicos) {//percorre o vetor de topicos e adiciona na lista
            
            lista.add(lista.getSize(), ref.getTopico());
        }
               
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jList1);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Tópicos ");

        jButton1.setText("Pesquisar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Usuários");

        jButton2.setText("Iniciar chat");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código Usuario", "Nome", "IPAddres"
            }
        ));
        jScrollPane3.setViewportView(jTable1);

        jButton3.setText("Sair");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(jLabel1)
                        .addGap(294, 294, 294)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGap(76, 76, 76)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    public class Client {// classe que comunica com o server tcp

        private Socket socket = null;
        private ObjectInputStream inputStream = null;
        private ObjectOutputStream outputStream = null;
        //private boolean isConnected = false;
        private ServerSocket serverSocket = null;
        private ObjectInputStream inStream = null;
        

        public Client() {

        }

        public ArrayList<UserModel> communicate(int topico) {
            ArrayList<UserModel> ListaUsers = new ArrayList<>();// guarda uma lista de usuarios de determinado topico
            
                try {
                    int porta = 9875;//porta do sevidor tcp
                    socket = new Socket("localHost", porta);// trocar localhost por IP server tcp
                    //System.out.println("Connected");
                    //isConnected = true;
                    outputStream = new ObjectOutputStream(socket.getOutputStream());
                    //Student student = new Student(1, "Bijoy");
                    //System.out.println("Object to be written = " + topico);
                    
                    //envia string com topico e o ip local para o server tcp
                    outputStream.writeObject(""+topico + InetAddress.getLocalHost().getHostAddress());
                    
                                        
                    serverSocket = new ServerSocket(666);//espera respos do server tcp
                    socket = serverSocket.accept();
                    System.out.println("Connected");
                    inStream = new ObjectInputStream(socket.getInputStream());//guarda o input
                    
                    ListaUsers = (ArrayList<UserModel>) inStream.readObject();//le objeto e guarda na lista
                    
                    //user = ListaUsers.get(0);
                    //System.out.println("Object received = " + user.getNome());
                    
                    serverSocket.close();
                    socket.close();                
                } catch (SocketException se) {
                    se.printStackTrace();
// System.exit(0);
                } catch (IOException e) {
                    e.printStackTrace();
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Screen_SelectChat.class.getName()).log(Level.SEVERE, null, ex);
                }
            
            return ListaUsers;//retorna a lista
        }
    }
   
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
       int topico = jList1.getSelectedIndex();//pega o indice do topico selecionado
       
       ArrayList<UserModel> ListaUsers = new ArrayList<>();//cria uma lista de usuarios
       Client client = new Client();//intancia um novo cliente
       
       ListaUsers = client.communicate(topico+1);//chama funcao communicate q se comunica com
       //o servidor tcp e retorna a lista de user dispostos a conversar com tal assunto
       
       DefaultTableModel modelo = new DefaultTableModel();// define modelo da tabela
       
        modelo.addColumn("Código Usuario");//nomeia colunas
        modelo.addColumn("Nome");
        modelo.addColumn("IP Address");
       
       for(UserModel user:ListaUsers){
           //escreve na tabela as informacoes de usuario
           modelo.addRow(new String[]{""+user.getId(),user.getNome(),user.getIPaddres()});
           
       }
       jTable1.setModel(modelo);  //set modelo a jTable1            
       URL url = null;
            try {
                ModelUrl s = new ModelUrl();
                url = new URL(s.GetAux()+ "?wsdl");
            } catch (MalformedURLException ex) {
                Logger.getLogger(Screen_Register_User.class.getName()).log(Level.SEVERE, null, ex);
            }
            QName qname = new QName("http://WebSeviceSOAP/", "Implements_SOAPService");
            Service ws = Service.create(url, qname);
            Interface_SOAP inter = ws.getPort(Interface_SOAP.class);
            inter.RegistrarPesquisa(topico+1);// pede ao web service SOAP para registrar uma pesquisa
       
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
        URL url = null;
            try {
                ModelUrl s = new ModelUrl();
                url = new URL(s.GetAux()+ "?wsdl");
            } catch (MalformedURLException ex) {
                Logger.getLogger(Screen_Register_User.class.getName()).log(Level.SEVERE, null, ex);
            }
            QName qname = new QName("http://WebSeviceSOAP/", "Implements_SOAPService");
            Service ws = Service.create(url, qname);
            Interface_SOAP inter = ws.getPort(Interface_SOAP.class);
            inter.ExcluirChatOnline(coduser);// pede ao web service SOAP para excluir user disposto a conversar     
        dispose();
    }//GEN-LAST:event_jButton3ActionPerformed
    
    public String getNomeUser(){ // funcao para retorna nome de usuario
        Connection conexao = new ConnectionFactory().getConnection();// funcao para abrir conexao com banco
        String retorno = new String();
        String sql = "select nome from usuario where codusuario = ?";
		
		try {
			PreparedStatement st = conexao.prepareStatement(sql);
			                 
			st.setInt(1, coduser);
			
                        ResultSet result = st.executeQuery();
                        result.next();
                        retorno = result.getString("nome");
			result.close();
			st.close();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
                //System.out.println("retorno selec");
        return retorno;
    }
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int row = jTable1.getSelectedRow();//pega a linha da tabela selecionada
        String ipDestino = jTable1.getValueAt(row, 2).toString();// pega ip do user selecionado
        
        try{
        socket = new Socket(ipDestino, 5678);//pra quem vou mandar e q porta
        //System.out.println("Connected");
        System.out.println("Destino is = " + ipDestino);
               
        outputStream = new ObjectOutputStream(socket.getOutputStream());
        
        outputStream.writeObject("#@!"+InetAddress.getLocalHost().getHostAddress().toString());//o q vou mandar
        
        Screen_Cliente_Chat a = new Screen_Cliente_Chat(coduser,getNomeUser(),ipDestino);//instancio um novo chat para iniciar
        a.setVisible(true);//seta como visivel
                
        URL url = null;
            try {
                ModelUrl s = new ModelUrl();
                url = new URL(s.GetAux()+ "?wsdl");
            } catch (MalformedURLException ex) {
                Logger.getLogger(Screen_Register_User.class.getName()).log(Level.SEVERE, null, ex);
            }
            QName qname = new QName("http://WebSeviceSOAP/", "Implements_SOAPService");
            Service ws = Service.create(url, qname);
            Interface_SOAP inter = ws.getPort(Interface_SOAP.class);
            inter.RegistrarChat(coduser, Integer.parseInt(jTable1.getValueAt(row, 0).toString()), jList1.getSelectedIndex()+1);
            inter.ExcluirChatOnline(coduser);//exclui usuer disposto a conversar
        }catch(IOException e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    
    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
