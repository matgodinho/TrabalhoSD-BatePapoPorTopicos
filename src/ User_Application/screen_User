- / *
- * Para alterar este cabeçalho de licença, escolha Cabeçalhos de licença em Propriedades do projeto.
- * Para alterar este arquivo de modelo, selecione Ferramentas | Modelos
- * e abra o modelo no editor.
- * / 
- pacote  User_Application ;
-
- import  Models.ModelUrl ;
- import  Models.TopicModel ;
- import  Models.UserTopicModel ;
- importar  WebSeviceSOAP.Interface_SOAP ;
- import  WebSeviceSOAP.Telas.Screen_Register_User ;
- import  java.io.ByteArrayOutputStream ;
- import  java.io.IOException ;
- import  java.io.ObjectOutputStream ;
- import  java.net.DatagramPacket ;
- import  java.net.DatagramSocket ;
- import  java.net.InetAddress ;
- import  java.net.MalformedURLException ;
- import  java.net.SocketException ;
- import  java.net.URL ;
- importar  java.net.UnknownHostException ;
- import  java.sql.Connection ;
- import  java.sql.PreparedStatement ;
- import  java.sql.ResultSet ;
- import  java.sql.SQLException ;
- import  java.util.ArrayList ;
- import  java.util.logging.Level ;
- import  java.util.logging.Logger ;
- import  javax.swing.DefaultListModel ;
- import  javax.swing.JOptionPane ;
- import  javax.xml.namespace.QName ;
- import  javax.xml.ws.Service ;
- import  jdbc.ConnectionFactory ;
-

- 
- * / 
- classe pública  Screen_User estende javax.swing . JFrame {   
-
-     / **
-      * Cria novo formulário Screen_User
- * /     
-     public  Screen_User () {
- initComponents ();
-         conexão conexao =  new  ConnectionFactory () . getConnection ();
-
-         ArrayList < TopicModel >  ListaTopicos  =  novo  ArrayList <> ();
-
-         String sql =  " selecione * dos topicos " ;
-         PreparedStatement st;
-         tente {
- st = conexao . prepareStatement (sql);
-             resultado ResultSet = st . executeQuery ();
-             while (resultado . next ()) {
-                 tópico TopicModel =  new  TopicModel ();
- tópico . setCodtopico (resultado . getInt ( " codtopico " ));
-                 // System.out.println (result.getInt ("codusuario"));
- tópico . setTopico (resultado . getString ( " topico " ));
-                 // System.out.println (result.getString ("nome"));
-                 ListaTopicos . adicionar (tópico); // adicionar topico a lista
-}
- resultado . fechar();
- st . fechar();
-} catch ( SQLException e) {
-             // TODO Bloco catch gerado automaticamente
- e . printStackTrace ();
-}
-         DefaultListModel lista =  novo  DefaultListModel ();
- jList2 . setModel (lista);
-
-         para ( TopicModel ref :  ListaTopicos ) {
-
- lista . add (lista . getSize (), ref . getTopico ());
-}
-
-}
-
-     / **
-      * Este método é chamado de dentro do construtor para inicializar o formulário.
-      * AVISO: NÃO modifique este código. O conteúdo deste método é sempre
-      * regenerado pelo Form Editor.
- * /     
-     @SuppressWarnings ( " não selecionado " )
-     // <editor-fold defaultstate = "colapsado" desc = "código gerado"> // GEN-BEGIN: initComponents
-     private  void  initComponents () {
-
-         Login  =  novo  javax.swing . JButton ();
-         Text_codUser  =  new  javax.swing . JTextField ();
- jButton2 =  novo  javax.swing . JButton ();
- jLabel1 =  novo  javax.swing . JLabel ();
- jLabel2 =  novo  javax.swing . JLabel ();
- jScrollPane2 =  new  javax.swing . JScrollPane ();
- jList2 =  new  javax.swing.JList <> ();
- jLabel3 =  novo  javax.swing . JLabel ();
- jPasswordField1 =  novo  javax.swing . JPasswordField ();
-
- setDefaultCloseOperation ( javax.swing . WindowConstants . EXIT_ON_CLOSE );
- setResizable ( false );
-
-         Login . setText ( " Login " );
-         Login . addActionListener ( new  java.awt.event . ActionListener () {
-             public  void  actionPerformed ( java.awt.event . ActionEvent  evt ) {
- LoginActionPerformed (evt);
-}
-});
-
-         Text_codUser . addActionListener ( new  java.awt.event . ActionListener () {
-             public  void  actionPerformed ( java.awt.event . ActionEvent  evt ) {
- Text_codUserActionPerformed (evt);
-}
-});
-
- jButton2 . setText ( " Sair " );
- jButton2 . addActionListener ( new  java.awt.event . ActionListener () {
-             public  void  actionPerformed ( java.awt.event . ActionEvent  evt ) {
- jButton2ActionPerformed (evt);
-}
-});
-
- jLabel1 . setFont ( new  java.awt . Font ( " Tahoma " , 0 , 12 )); // NOI18N
- jLabel1 . setText ( " Usuário: " );
-
- jLabel2 . setFont ( new  java.awt . Font ( " Tahoma " , 0 , 14 )); // NOI18N
- jLabel2 . setText ( " Tópicos: " );
-
- jScrollPane2 . setViewportView (jList2);
-
- jLabel3 . setFont ( new  java.awt . Font ( " Tahoma " , 0 , 12 )); // NOI18N
- jLabel3 . setText ( " senha: " );
-
- jPasswordField1 . addActionListener ( new  java.awt.event . ActionListener () {
-             public  void  actionPerformed ( java.awt.event . ActionEvent  evt ) {
- jPasswordField1ActionPerformed (evt);
-}
-});
-
-         javax.swing . Layout de GroupLayout =  novo  javax.swing . GroupLayout (getContentPane ());
- getContentPane () . setLayout (layout);
- layout . setHorizontalGroup (
- layout . createParallelGroup ( javax.swing . GroupLayout . Alinhamento . LÍDER )
- .addGroup (layout . createSequentialGroup ()
- .addGap ( 84 , 84 , 84 )
- .addGroup (layout . createParallelGroup ( javax.swing . GroupLayout . Alinhamento . TRAILING )
- .addComponent (jLabel3)
- .addComponent (jLabel1)
- .addComponent (jLabel2, javax.swing . GroupLayout . PREFERRED_SIZE , 65 , javax.swing . GroupLayout . PREFERRED_SIZE ))
- .addPreferredGap ( javax.swing . LayoutStyle . ComponentPlacement . RELATED )
- .addGroup (layout . createParallelGroup ( javax.swing . GroupLayout . Alinhamento . LEADING , false )
- .addGroup (layout . createSequentialGroup ()
- .addComponent ( Login , javax.swing . GroupLayout . PREFERRED_SIZE , 131 , javax.swing . GroupLayout . PREFERRED_SIZE )
- .addPreferredGap ( javax.swing . LayoutStyle . ComponentPlacement . RELATED )
- .addComponent (jButton2, javax.swing . GroupLayout . PREFERRED_SIZE , 132 , javax.swing . GroupLayout . PREFERRED_SIZE ))
- .addComponent ( Text_codUser )
- .addComponent (jScrollPane2)
- .addComponent (jPasswordField1))
- .addContainerGap ( 280 , Short . MAX_VALUE )
-);
- layout . setVerticalGroup (
- layout . createParallelGroup ( javax.swing . GroupLayout . Alinhamento . LÍDER )
- .addGroup ( javax.swing . GroupLayout . Alinhamento . TRAILING , layout . createSequentialGroup ()
- .addContainerGap ()
- .addGroup (layout . createParallelGroup ( javax.swing . GroupLayout . Alinhamento . LINHA DE BASE )
- .addComponent ( Text_codUser , javax.swing . GroupLayout . PREFERRED_SIZE , 34 , javax.swing . GroupLayout . PREFERRED_SIZE )
- .addComponent (jLabel1))
- .addGroup (layout . createParallelGroup ( javax.swing . GroupLayout . Alinhamento . LÍDER )
- .addGroup (layout . createSequentialGroup ()
- .addGap ( 10 , 10 , 10 )
- .addComponent (jLabel3)
- .addPreferredGap ( javax.swing . LayoutStyle . ComponentPlacement . RELACIONADO , javax.swing . GroupLayout . DEFAULT_SIZE , Short . MAX_VALUE ))
- .addGroup ( javax.swing . GroupLayout . Alinhamento . TRAILING , layout . createSequentialGroup ()
- .addPreferredGap ( javax.swing . LayoutStyle . ComponentPlacement . RELATED , 8 , Short . MAX_VALUE )
- .addComponent (jPasswordField1, javax.swing . GroupLayout . PREFERRED_SIZE , 34 , javax.swing . GroupLayout . PREFERRED_SIZE )
- .addGap ( 12 , 12 , 12 )))
- .addGroup (layout . createParallelGroup ( javax.swing . GroupLayout . Alinhamento . LÍDER )
- .addComponent (jScrollPane2, javax.swing . GroupLayout . PREFERRED_SIZE , 206 , javax.swing . GroupLayout . PREFERRED_SIZE )
- .addComponent (jLabel2))
- .addPreferredGap ( javax.swing . LayoutStyle . ComponentPlacement . RELATED )
- .addGroup (layout . createParallelGroup ( javax.swing . GroupLayout . Alinhamento . LINHA DE BASE )
- .addComponent ( Login , javax.swing . GroupLayout . PREFERRED_SIZE , 49 , javax.swing . GroupLayout . PREFERRED_SIZE )
- .addComponent (jButton2, javax.swing . GroupLayout . PREFERRED_SIZE , 49 , javax.swing . GroupLayout . PREFERRED_SIZE ))
- .addGap ( 28 , 28 , 28 ))
-);
-
- pacote ();
-} // </ editor-fold> // GEN-END: initComponents
-
-     privada  vazio  Text_codUserActionPerformed ( java.awt.event . ActionEvent  evt ) { // GEN-PRIMEIRO: event_Text_codUserActionPerformed
-         // TODO adicione seu código de manipulação aqui:
-} // GEN-LAST: event_Text_codUserActionPerformed
-
-     privada  vazio  jButton2ActionPerformed ( java.awt.event . ActionEvent  evt ) { // GEN-PRIMEIRO: event_jButton2ActionPerformed
-         // TODO adicione seu código de manipulação aqui:
- dispor (); // ao pressionar botao sair fecha a tela
-
-} // GEN-LAST: event_jButton2ActionPerformed
-
-     public  int  createAndListenSocket ( int  codUsuario , String  senha , int  codTopic ) {
-
-         soquete DatagramSocket  ;
-         resposta da string =  " " ;
-         tente {
-             int porta =  1233 ;
-             Soquete  =  novo  DatagramSocket ();
-             InetAddress  IPAddress  =  InetAddress . getLocalHost ();
-             byte [] incomingData =  novo  byte [ 1024 ];
-
-             UserTopicModel userTopicModel =  new  UserTopicModel (codUser, senha, codTopic);
-             ByteArrayOutputStream outputStream =  new  ByteArrayOutputStream ();
-             ObjectOutputStream os =  new  ObjectOutputStream (outputStream);
- os . writeObject (userTopicModel);
-
-             byte [] data = outputStream . toByteArray (); //
-             DatagramPacket sendPacket =  new  DatagramPacket (dados, dados . Comprimento, endereço IP , porta);
-             soquete . send (sendPacket);
-             // System.out.println ("Mensagem enviada do cliente");
-             DatagramPacket incomingPacket =  novo  DatagramPacket (incomingData, incomingData . Length); // pacote para receber uma resposta
-             soquete . receber (incomingPacket);
- response =  new  String (incomingPacket . getData ()); // extrai os dados da resposta
-             // System.out.println ("Resposta do servidor" + resposta + "oi"); depurar
-             // Thread.sleep (2000); debug
-             // System.out.println ("corte" + response.substring (0, 1) + "oi"); depuração
-} catch ( UnknownHostException e) {
- e . printStackTrace ();
-} catch ( SocketException e) {
- e . printStackTrace ();
-} catch ( IOException e) {
- e . printStackTrace ();
-}
-         int convert =  inteiro . parseInt (resposta . substring ( 0 , 1 )); // converte uma resposta pra todo
-         // System.out.println ("convertido" + convert);
-         converter de retorno ; // chamadas o inteiro
-}
-
-     privada  vazio  LoginActionPerformed ( java.awt.event . ActionEvent  evt ) { // GEN-PRIMEIRO: event_LoginActionPerformed
-         // TODO adicione seu código de manipulação aqui:
-
-         int codtopico []; // vetor para guardar topicos
-         int codusuario =  Inteiro . parseInt ( Text_codUser . getText ()); // pega o cod de usuario e converte para int
-         String senha =  new  String (jPasswordField1 . GetPassword ()); // pega a senha do campo senha
-
-         booleano loginAccept =  falso ; // controle de validação de login
-         int s [] =  novo  int [ 8 ];
- codtopico = jList2 . getSelectedIndices (); // atribui os indices selected n lista
-
-         if (jList2 . getSelectedIndex () ==  - 1 ) {
-             JOptionPane . showMessageDialog ( null , " Selecione ao menos 1 (um) tópico !! " );
-             retorno ;
-}
-         int k =  0 ;
-         para ( int i : codtopico) {
-             // System.out.println ("aki"); debug
-             Screen_User client =  new  Screen_User ();
- s [k] = cliente . createAndListenSocket (codusuario, senha, i +  1 ); // guarda respostas do servidor UDP
-             // System.out.println (s [k]);
- k ++ ;
-}
-
-         para ( int ss : s) {
-             sistema . fora . println (ss +  "  " );
- //             if (ss == 0)
- //             {
- //               JOptionPane.showMessageDialog (null, "Senha incorreta!");
- //               loginAccept = false;
- //               quebra;
- //             }
-             if (ss ==  1 ) {
-                 JOptionPane . showMessageDialog ( null , " Topico não encontrado! " );
- loginAccept =  false ;
-                 pausa ;
-}
-             se (ss ==  2 ) {
-                 JOptionPane . showMessageDialog ( null , " Usuario ou senha inválido (s) " );
- loginAccept =  false ;
-                 pausa ;
-}
-             se (ss ==  3 ) {
- loginAccept =  true ;
-}
-}
-
-         if (loginAccept) { // se CodUser e topicos validos ...
-
-             URL url =  nulo ;
-             tente {
-                 ModelUrl ss =  new  ModelUrl ();
- url =  new  URL ( ss . GetAux () +  " ? wsdl " );
-} catch ( MalformedURLException ex) {
-                 Logger . getLogger ( Screen_Register_User . class . getName ()) . log ( Nível . GRAVE , nulo , ex);
-}
-             QName qname =  novo  QName ( " http: // WebSeviceSOAP / " , " Implements_SOAPService " );
-             Serviço ws =  serviço . create (url, qname);
-             Interface_SOAP inter = ws . getPort ( Interface_SOAP . classe);
-             inter . RegistrarAcesso (codusuario); // pede ao serviço web SOAP para registrador um acesso
-             para ( int j : codtopico) {
-
-                 inter . RegistrarChatOnline (codusuario, j +  1 ); // registra os topicos na tabela chatonline
-
-}
-
- dispor ();
-             Screen_SelectChat z =  new  Screen_SelectChat (codusuario); // instancia tela de selecao de chat se td ok
- z . setVisible ( true ); // seta como visivel
-
-             Thread_Escuta x =  new  Thread_Escuta (codusuario); // instancia thread listen
- x . começar(); // inicia thread
-
-}
-
-
-} // GEN-LAST: event_LoginActionPerformed
-
-     privada  vazio  jPasswordField1ActionPerformed ( java.awt.event . ActionEvent  evt ) { // GEN-PRIMEIRO: event_jPasswordField1ActionPerformed
-         // TODO adicione seu código de manipulação aqui:
-} // GEN-LAST: event_jPasswordField1ActionPerformed
-
-     / **
-      * @param args os argumentos da linha de comando
- * /     
-     public  static  void  main ( args de seqüência de caracteres  []) {
-         / * Defina o visual e a sensação do Nimbus * /
-         // <editor-fold defaultstate = "recolhido" desc = "Aparência e configuração do código (opcional)">
-         / * Se o Nimbus (introduzido no Java SE 6) não estiver disponível, mantenha a aparência padrão.
-          * Para mais detalhes, consulte http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
- * /         
-         tente {
-             para ( javax.swing . UIManager . LookAndFeelInfo info :  javax.swing . UIManager . getInstalledLookAndFeels ()) {
-                 if ( " Nimbus " . é igual a (info . getName ()))) {
-                     javax.swing . UIManager . setLookAndFeel (info . getClassName ());
-                     pausa ;
-}
-}
-} catch ( ClassNotFoundException ex) {
-             java.util.logging . Logger . getLogger ( Screen_User . class . getName ()) . log ( java.util.logging . Level . SEVERE , nulo , ex);
-} catch ( InstantiationException ex) {
-             java.util.logging . Logger . getLogger ( Screen_User . class . getName ()) . log ( java.util.logging . Level . SEVERE , nulo , ex);
-} catch ( IllegalAccessException ex) {
-             java.util.logging . Logger . getLogger ( Screen_User . class . getName ()) . log ( java.util.logging . Level . SEVERE , nulo , ex);
-} catch ( javax.swing . UnsupportedLookAndFeelException ex) {
-             java.util.logging . Logger . getLogger ( Screen_User . class . getName ()) . log ( java.util.logging . Level . SEVERE , nulo , ex);
-}
-         // </ editor-fold>
-         // </ editor-fold>
-
-         / * Crie e exiba o formulário * /
-         java.awt . EventQueue . invokeLater ( new  Runnable () {
-             public  void  run () {
-                 novo  Screen_User () . setVisible ( true );
-}
-});
-}
-
-     // Declaração de variáveis ​​- não modifica // GEN-BEGIN: variáveis
-     javax.swing privado  . JButton Login ; 
-     javax.swing privado  . JTextField Text_codUser ; 
-     javax.swing privado  . JButton jButton2;
-     javax.swing privado  . JLabel jLabel1;
-     javax.swing privado  . JLabel jLabel2;
-     javax.swing privado  . JLabel jLabel3;
-     privada  javax.swing.JList < string > jList2;
-     javax.swing privado  . JPasswordField jPasswordField1;
-     javax.swing privado  . JScrollPane jScrollPane2;
-     // Fim da declaração de variáveis ​​// GEN-END: variáveis
-
-     // @Override
-     // public void run () {
-     //   throw new UnsupportedOperationException ("Ainda não suportado."); // Para alterar o corpo dos métodos gerados, escolha Ferramentas | Modelos.
-     // }
-}
